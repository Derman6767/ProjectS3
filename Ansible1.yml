- name: Maak VM vanuit template
  hosts: localhost
  gather_facts: no

  vars_files:
    - credentials.yml

  vars:
    blade: "{{ Blade | default('') }}"
    fase: "{{ Fase | default('') }}"

  tasks:
    - name: Controleer of Blade variabele is opgegeven
      fail:
        msg: "De 'Blade' variabele is niet opgegeven!"
      when: blade == ''

    - name: Controleer of Fase variabele is opgegeven
      fail:
        msg: "De 'Fase' variabele is niet opgegeven!"
      when: fase == ''

    # Set vSphere UI link based on blade choice
    - name: Verbind met vcenter op basis van blade keuze
      set_fact:
        vsphere_hostname: >-
          {% if blade == '7' %}
          192.168.107.11
          {% elif blade == '10' %}
          192.168.110.11
          {% endif %}

    - name: Stel resource pool in op basis van blade keuze
      set_fact:
        vsphere_resourcepool: >-
          {% if blade == '7' %}
          192.168.107.9
          {% elif blade == '10' %}
          192.168.110.9
          {% endif %}

    - name: Stel datastore in op basis van bladekeuze
      set_fact:
        vsphere_datastore: >-
          {% if blade == '7' %}
          NAS_Blade7
          {% elif blade == '10' %}
          SAN_Blade10
          {% endif %}

    - name: Zet in map op basis van fase keuze
      set_fact:
        folder_name: >-
          {% if fase == 'O' %}
          1-O
          {% elif fase == 'T' %}
          2-T
          {% elif fase == 'A' %}
          3-A
          {% elif fase == 'P' %}
          4-P
          {% endif %}

    - name: Stel tweede IP nummer in op basis van keuze
      set_fact:
        vsphere_TweedeIP: >-
          {% if fase == 'O' %}
          1
          {% elif fase == 'T' %}
          2
          {% elif fase == 'A' %}
          3
          {% elif fase == 'P' %}
          4
          {% endif %}

    - name: Stel tweede IP nummer van router in op basis van keuze
      set_fact:
        vsphere_TweedeIPRouter: >-
          {% if fase == 'O' %}
          11
          {% elif fase == 'T' %}
          22
          {% elif fase == 'A' %}
          33
          {% elif fase == 'P' %}
          44
          {% endif %}

    - name: VLAN_ID voor DMZ gedeelte
      set_fact:
        vsphere_Vlan_ID_DMZ: >-
          {% if fase == 'O' %}
          1010
          {% elif fase == 'T' %}
          1020
          {% elif fase == 'A' %}
          1030
          {% elif fase == 'P' %}
          1040
          {% endif %}

    - name: VLAN_ID voor intern gedeelte
      set_fact:
        vsphere_Vlan_ID: >-
          {% if fase == 'O' %}
          1011
          {% elif fase == 'T' %}
          1021
          {% elif fase == 'A' %}
          1031
          {% elif fase == 'P' %}
          1041
          {% endif %}

    # Create first VM from Ubuntu template with a static IP address
    - name: Maak eerste VM (Ubuntu) vanuit Template met statisch IP-adres
      community.vmware.vmware_guest:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "RT-1-Blade-{{ fase }}{{ blade }}"
        template: "ubuntu-server-template"
        datacenter: "Datacenter"
        folder: "/OTAP/{{ folder_name | trim }}"
        #networks:
        # - name: VM Network
        #  ip: "10.{{ vsphere_TweedeIP }}.{{ blade }}.10"
        # netmask: 255.255.255.0
        #gateway: "10.{{ vsphere_TweedeIP }}.{{ blade }}.1"
        datastore: "{{ vsphere_datastore | trim }}"
        state: "poweredon"
      register: vm_creation_result1

    # Maak eerste pfsense VM van pfSense template
    - name: Maak eerste VM (Ubuntu) vanuit Template met statisch IP-adres
      community.vmware.vmware_guest:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "SRV-API-{{ fase }}{{ blade }}"
        template: "pfsense-template"
        datacenter: "Datacenter"
        folder: "/OTAP/{{ folder_name | trim }}"
        #        networks:
        #         - name: VM Network
        #          ip: "10.{{ vsphere_TweedeIP }}.{{ blade }}.1"
        #         netmask: 255.255.255.0
        #        gateway: "10.{{ vsphere_TweedeIP }}.{{ blade }}.1"
        datastore: "{{ vsphere_datastore | trim }}"
        state: "poweredon"
      register:
        vm_creation_result1

        # Maak tweede pfsense VM van pfSense template
    - name: Maak tweede pfsense vanuit Template
      community.vmware.vmware_guest:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "RT-2-Blade-{{ fase }}{{ blade }}"
        template: "pfsense-template"
        datacenter: "Datacenter"
        folder: "/OTAP/{{ folder_name | trim }}"
        #networks:
        # - name: VM Network
        #  ip: "10.{{ vsphere_TweedeIP }}.{{ blade }}.2"
        # netmask: 255.255.255.0
        #gateway: "10.{{ vsphere_TweedeIP }}.{{ blade }}.1"
        datastore: "{{ vsphere_datastore | trim }}"
        state: "poweredon"
      register: vm_creation_result1

    # Create second VM from Ubuntu template with a static IP address
    - name: Maak tweede VM (Ubuntu) vanuit template met statisch IP-adres
      community.vmware.vmware_guest:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "SRV-DB-{{ fase }}{{ blade }}"
        template: "ubuntu-server-template"
        datacenter: "Datacenter"
        folder: "/OTAP/{{ folder_name | trim }}"
        #    networks:
        #       - name: VM Network
        #          ip: "10.{{ vsphere_TweedeIPRouter }}.{{ blade }}.2"
        #           netmask: 255.255.255.0
        #            gateway: "10.{{ vsphere_TweedeIPRouter }}.{{ blade }}.1"
        datastore: "{{ vsphere_datastore | trim }}"
        state: "poweredon"
      register: vm_creation_result2
