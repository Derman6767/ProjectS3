---
- name: Maak VM vanuit template
  hosts: localhost
  gather_facts: no

  vars_files:
    - credentials.yml
    
  vars:
    blade: "{{ Blade | default('') }}"
    fase: "{{ Fase | default('') }}"

  tasks:
    - name: Controleer of Blade variabele is opgegeven
      fail:
        msg: "De 'Blade' variabele is niet opgegeven!"
      when: blade == ''

    - name: Controleer of Fase variabele is opgegeven
      fail:
        msg: "De 'Fase' variabele is niet opgegeven!"
      when: fase == ''

    - name: Verbind met vcenter op basis van blade keuze
      set_fact:
        vsphere_hostname: >-
          {% if blade == '7' %}
          192.168.107.11
          {% elif blade == '10' %}
          192.168.110.11
          {% endif %}

    - name: Stel resource pool in op basis van blade keuze
      set_fact:
        vsphere_resourcepool: >-
          {% if blade == '7' %}
          192.168.107.9
          {% elif blade == '10' %}
          192.168.110.9
          {% endif %}

    - name: Stel datastore in op basis van bladekeuze
      set_fact:
        vsphere_datastore: >-
          {% if blade == '7' %}
          NAS_Blade7
          {% elif blade == '10' %}
          SAN_Blade10
          {% endif %}

    - name: Zet in map op basis van fase keuze
      set_fact:
        folder_name: >-
          {% if fase == 'O' %}
          1-O
          {% elif fase == 'T' %}
          2-T
          {% elif fase == 'A' %}
          3-A
          {% elif fase == 'P' %}
          4-P
          {% endif %}

    - name: VLAN_ID voor DMZ gedeelte
      set_fact:
        vsphere_Vlan_ID_DMZ: >-
          {% if fase == 'O' %}
          1010
          {% elif fase == 'T' %}
          1020
          {% elif fase == 'A' %}
          1030
          {% elif fase == 'P' %}
          1040
          {% endif %}

    - name: VLAN_ID voor intern gedeelte
      set_fact:
        vsphere_Vlan_ID: >-
          {% if fase == 'O' %}
          1011
          {% elif fase == 'T' %}
          1021
          {% elif fase == 'A' %}
          1031
          {% elif fase == 'P' %}
          1041
          {% endif %}

    - name: VM1. Maak eerste pfSense VM vanuit Template
      community.vmware.vmware_guest:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "RT-1-Blade-{{ fase }}{{ blade }}"
        template: "RT-1-Blade-{{ fase }}{{ blade }}-template"
        datacenter: "Datacenter"
        folder: "/OTAP/{{ folder_name | trim }}"
        datastore: "{{ vsphere_datastore | trim }}"
        state: "poweredoff"
      register: vm_creation_result1

    - name: VM1. Configureer eerste netwerk voor eerste pfSense VM
      community.vmware.vmware_guest_network:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "RT-1-Blade-{{ fase }}{{ blade }}"
        datacenter: "Datacenter"
        device_type: "vmxnet3"
        vlan_id: "1004"
        state: "present"
        start_connected: True
        connected: True
      register: network_result1

    - name: VM1. Configureer tweede netwerk voor eerste pfSense VM
      community.vmware.vmware_guest_network:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "RT-1-Blade-{{ fase }}{{ blade }}"
        datacenter: "Datacenter"
        device_type: "vmxnet3"
        vlan_id: "{{ vsphere_Vlan_ID_DMZ }}"
        state: "present"
        start_connected: True
        connected: True
      register: network_result2

    - name: VM2. Maak eerste VM (Ubuntu) vanuit Template
      community.vmware.vmware_guest:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "SRV-API-{{ fase }}{{ blade }}"
        template: "ubuntu-server-template-2"
        datacenter: "Datacenter"
        folder: "/OTAP/{{ folder_name | trim }}"
        datastore: "{{ vsphere_datastore | trim }}"
        state: "poweredoff"
      register: vm_creation_result2

    - name: VM2. Configureer netwerk voor API-SRV VM (Ubuntu)
      community.vmware.vmware_guest_network:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "SRV-API-{{ fase }}{{ blade }}"
        datacenter: "Datacenter"
        device_type: "vmxnet3"
        vlan_id: "{{ vsphere_Vlan_ID_DMZ }}"
        state: "present"
        start_connected: True
        connected: True
      register: network_result3

    - name: VM3. Maak tweede pfSense VM vanuit Template
      community.vmware.vmware_guest:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "RT-2-Blade-{{ fase }}{{ blade }}"
        template: "RT-2-Blade-{{ fase }}{{ blade }}-template"
        datacenter: "Datacenter"
        folder: "/OTAP/{{ folder_name | trim }}"
        datastore: "{{ vsphere_datastore | trim }}"
        state: "poweredoff"
      register: vm_creation_result3

    - name: VM3. Configureer eerste netwerk voor tweede pfSense VM
      community.vmware.vmware_guest_network:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "RT-2-Blade-{{ fase }}{{ blade }}"
        datacenter: "Datacenter"
        device_type: "vmxnet3"
        vlan_id: "{{ vsphere_Vlan_ID_DMZ }}"
        state: "present"
        start_connected: True
        connected: True
      register: network_result4

    - name: VM3. Configureer tweede netwerk voor tweede pfSense VM
      community.vmware.vmware_guest_network:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "RT-2-Blade-{{ fase }}{{ blade }}"
        datacenter: "Datacenter"
        device_type: "vmxnet3"
        vlan_id: "{{ vsphere_Vlan_ID }}"
        state: "present"
        start_connected: True
        connected: True
      register: network_result5

    - name: VM4. Maak tweede VM (Database)
      community.vmware.vmware_guest:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "SRV-DB-{{ fase }}{{ blade }}-template"
        template: "ubuntu-server-template-2"
        datacenter: "Datacenter"
        folder: "/OTAP/{{ folder_name | trim }}"
        datastore: "{{ vsphere_datastore | trim }}"
        state: "poweredoff"
      register: vm_creation_result4

    - name: VM4. Configureer netwerk DB server
      community.vmware.vmware_guest_network:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "SRV-DB-{{ fase }}{{ blade }}"
        datacenter: "Datacenter"
        device_type: "vmxnet3"
        vlan_id: "{{ vsphere_Vlan_ID }}"
        state: "present"
        start_connected: True
        connected: True
      register: network_result6

    - name: VM1. Zet eerste pfSense VM aan
      community.vmware.vmware_guest_powerstate:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "RT-1-Blade-{{ fase }}{{ blade }}"
        state: powered-on
      when: vm_creation_result1 is defined and not vm_creation_result1.failed

    - name: VM2. Zet eerste Ubuntu VM aan
      community.vmware.vmware_guest_powerstate:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "SRV-API-{{ fase }}{{ blade }}"
        state: powered-on
      when: vm_creation_result2 is defined and not vm_creation_result2.failed

    - name: VM3. Zet tweede pfSense VM aan
      community.vmware.vmware_guest_powerstate:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "RT-2-Blade-{{ fase }}{{ blade }}"
        state: powered-on
      when: vm_creation_result3 is defined and not vm_creation_result3.failed

    - name: VM4. Zet tweede Ubuntu VM aan
      community.vmware.vmware_guest_powerstate:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "SRV-DB-{{ fase }}{{ blade }}"
        state: powered-on
      when: vm_creation_result4 is defined and not vm_creation_result4.failed

