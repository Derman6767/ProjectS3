---
- name: Maak VM vanuit template
  hosts: localhost
  gather_facts: no

  vars_files:
    - credentials.yml

  vars:
    blade: "{{ Blade | default('') }}"
    fase: "{{ Fase | default('') }}"

  tasks:
    - name: Controleer of Blade variabele is opgegeven
      fail:
        msg: "De 'Blade' variabele is niet opgegeven!"
      when: blade == ''

    - name: Controleer of Fase variabele is opgegeven
      fail:
        msg: "De 'Fase' variabele is niet opgegeven!"
      when: fase == ''

    # Set vSphere UI link based on blade choice
    - name: Verbind met vcenter op basis van blade keuze
      set_fact:
        vsphere_hostname: >-
          {% if blade == '7' %}
          192.168.107.11
          {% elif blade == '10' %}
          192.168.110.11
          {% endif %}

    - name: Stel resource pool in op basis van blade keuze
      set_fact:
        vsphere_resourcepool: >-
          {% if blade == '7' %}
          192.168.107.9
          {% elif blade == '10' %}
          192.168.110.9
          {% endif %}

    - name: Stel datastore in op basis van bladekeuze
      set_fact:
        vsphere_datastore: >-
          {% if blade == '7' %}
          NAS_Blade7
          {% elif blade == '10' %}
          SAN_Blade10
          {% endif %}

    - name: Zet in map op basis van fase keuze
      set_fact:
        folder_name: >-
          {% if fase == 'O' %}
          1-O
          {% elif fase == 'T' %}
          2-T
          {% elif fase == 'A' %}
          3-A
          {% elif fase == 'P' %}
          4-P
          {% endif %}

    - name: Stel tweede IP nummer in op basis van keuze
      set_fact:
        vsphere_TweedeIP: >-
          {% if fase == 'O' %}
          1
          {% elif fase == 'T' %}
          2
          {% elif fase == 'A' %}
          3
          {% elif fase == 'P' %}
          4
          {% endif %}

    # Create first VM from Ubuntu template
    - name: Maak eerste VM (Ubuntu) vanuit Template
      vmware_guest:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "SRV-API-{{ fase }}{{ blade }}"
        template: "ubuntu-server-template"
        datacenter: "Datacenter"
        folder: "/OTAP/{{folder_name | trim}}"
        datastore: "{{ vsphere_datastore | trim }}"
        state: "poweredon"
        wait_for_ip_address: yes
      register: vm_creation_result1

    # Create second VM from Ubuntu template
    - name: Maak tweede VM (Ubuntu) vanuit template
      vmware_guest:
        hostname: "{{ vsphere_hostname | trim }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "SRV-DB-{{ fase }}{{ blade }}"
        template: "ubuntu-server-template"
        datacenter: "Datacenter"
        folder: "/OTAP/{{folder_name | trim}}"
        datastore: "{{ vsphere_datastore | trim }}"
        state: "poweredon"
        wait_for_ip_address: yes
      register: vm_creation_result2
      
# command om uit te voeren
# ansible-playbook playbook.yml -e "Blade=10 Fase=P"
