---
- name: Maak VM vanuit template
  hosts: localhost
  gather_facts: no

  vars_files:
    - credentials.yml

  tasks:
    # Get Blade and Fase variables from run command
    - name: Get Blade variable
      set_fact:
        blade: "{{ (ansible_env.Blade) | default('7') }}"  # Set default value if not provided

    - name: Get Fase variable
      set_fact:
        fase: "{{ (ansible_env.Fase) | default('O') }}"  # Set default value if not provided

    # Set vSphere UI link based on blade choice
    - name: Set vSphere UI link based on blade choice
      set_fact:
        vsphere_hostname: >-
          {% if blade == '7' %}
          https://192.168.107.11
          {% elif blade == '10' %}
          https://192.168.110.11
          {% endif %}

        vsphere_resourcepool: >-
          {% if blade == '7' %}
          https://192.168.107.9
          {% elif blade == '10' %}
          https://192.168.110.9
          {% endif %}

        folder_name: >-
          {% if fase == 'O' %}
          1-O
          {% elif fase == 'T' %}
          2-T
          {% elif fase == 'A' %}
          3-A
          {% elif fase == 'P' %}
          4-P
          {% endif %}

    # Create first VM from Ubuntu template
    - name: Create first VM from Ubuntu template
      vmware_guest:
        hostname: "{{ vsphere_hostname }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "SRV-API-{{ fase }}{{ blade }}"
        template: "ubuntu-server"
        datacenter: "Datacenter"
        folder: "OTAP/{{ folder_name }}"
        resource_pool: "{{ vsphere_resourcepool }}"
        cluster: "Cluster"
        state: "poweredon"
        wait_for_ip_address: yes

    # Create second VM from Ubuntu template
    - name: Create second VM from Ubuntu template
      vmware_guest:
        hostname: "{{ vsphere_hostname }}"
        username: "{{ vmware_username }}"
        password: "{{ vmware_password }}"
        validate_certs: False
        name: "SRV-DB-{{ fase }}{{ blade }}"
        template: "ubuntu-server"
        datacenter: "Datacenter"
        folder: "OTAP/{{ folder_name }}"
        resource_pool: "{{ vsphere_resourcepool }}"
        cluster: "Cluster"
        state: "poweredon"
        wait_for_ip_address: yes

    # Display the IP addresses of the new VMs
    - name: Display the IP addresses of the new VMs
      debug:
        msg: >
          The new VM SRV-API-{{ fase }}{{ blade }} has IP address {{ vm_creation_result1.instance.hw_eth0.ipaddresses[0] }},
          and the new VM SRV-DB-{{ fase }}{{ blade }} has IP address {{ vm_creation_result2.instance.hw_eth0.ipaddresses[0] }}

# ansible-playbook playbook.yml -e "Blade=10 Fase=P"
